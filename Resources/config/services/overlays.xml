<?xml version="1.0" encoding="UTF-8" ?>

<container
    xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd"
>
    <parameters>
        <parameter key="giko_baidu_map.animation.helper.class">Ivory\GoogleMap\Helper\Overlays\AnimationHelper</parameter>

        <parameter key="giko_baidu_map.circle.class">Ivory\GoogleMap\Overlays\Circle</parameter>
        <parameter key="giko_baidu_map.circle.builder.class">Giko\BaiduMapBundle\Model\Overlays\CircleBuilder</parameter>
        <parameter key="giko_baidu_map.circle.helper.class">Ivory\GoogleMap\Helper\Overlays\CircleHelper</parameter>

        <parameter key="giko_baidu_map.encoded_polyline.class">Ivory\GoogleMap\Overlays\EncodedPolyline</parameter>
        <parameter key="giko_baidu_map.encoded_polyline.builder.class">Giko\BaiduMapBundle\Model\Overlays\EncodedPolylineBuilder</parameter>
        <parameter key="giko_baidu_map.encoded_polyline.helper.class">Ivory\GoogleMap\Helper\Overlays\EncodedPolylineHelper</parameter>
        <parameter key="giko_baidu_map.encoding.helper.class">Ivory\GoogleMap\Helper\Geometry\EncodingHelper</parameter>

        <parameter key="giko_baidu_map.ground_overlay.class">Ivory\GoogleMap\Overlays\GroundOverlay</parameter>
        <parameter key="giko_baidu_map.ground_overlay.builder.class">Giko\BaiduMapBundle\Model\Overlays\GroundOverlayBuilder</parameter>
        <parameter key="giko_baidu_map.ground_overlay.helper.class">Ivory\GoogleMap\Helper\Overlays\GroundOverlayHelper</parameter>

        <parameter key="giko_baidu_map.info_window.class">Ivory\GoogleMap\Overlays\InfoWindow</parameter>
        <parameter key="giko_baidu_map.info_window.builder.class">Giko\BaiduMapBundle\Model\Overlays\InfoWindowBuilder</parameter>
        <parameter key="giko_baidu_map.info_window.helper.class">Ivory\GoogleMap\Helper\Overlays\InfoWindowHelper</parameter>

        <parameter key="giko_baidu_map.marker_cluster.class">Ivory\GoogleMap\Overlays\MarkerCluster</parameter>
        <parameter key="giko_baidu_map.marker_cluster.builder.class">Giko\BaiduMapBundle\Model\Overlays\MarkerClusterBuilder</parameter>
        <parameter key="giko_baidu_map.marker_cluster.helper.class">Ivory\GoogleMap\Helper\Overlays\MarkerCluster\MarkerClusterHelper</parameter>
        <parameter key="giko_baidu_map.marker_cluster.helper.abstract.class">Ivory\GoogleMap\Helper\Overlays\MarkerCluster\AbstractMarkerClusterHelper</parameter>
        <parameter key="giko_baidu_map.marker_cluster.helper.default.class">Ivory\GoogleMap\Helper\Overlays\MarkerCluster\DefaultMarkerClusterHelper</parameter>
        <parameter key="giko_baidu_map.marker_cluster.helper.js.class">Ivory\GoogleMap\Helper\Overlays\MarkerCluster\JsMarkerClusterHelper</parameter>

        <parameter key="giko_baidu_map.marker.class">Ivory\GoogleMap\Overlays\Marker</parameter>
        <parameter key="giko_baidu_map.marker.builder.class">Giko\BaiduMapBundle\Model\Overlays\MarkerBuilder</parameter>
        <parameter key="giko_baidu_map.marker.helper.class">Ivory\GoogleMap\Helper\Overlays\MarkerHelper</parameter>

        <parameter key="giko_baidu_map.marker_image.class">Ivory\GoogleMap\Overlays\MarkerImage</parameter>
        <parameter key="giko_baidu_map.marker_image.builder.class">Giko\BaiduMapBundle\Model\Overlays\MarkerImageBuilder</parameter>
        <parameter key="giko_baidu_map.marker_image.helper.class">Ivory\GoogleMap\Helper\Overlays\MarkerImageHelper</parameter>

        <parameter key="giko_baidu_map.marker_shape.class">Ivory\GoogleMap\Overlays\MarkerShape</parameter>
        <parameter key="giko_baidu_map.marker_shape.builder.class">Giko\BaiduMapBundle\Model\Overlays\MarkerShapeBuilder</parameter>
        <parameter key="giko_baidu_map.marker_shape.helper.class">Ivory\GoogleMap\Helper\Overlays\MarkerShapeHelper</parameter>

        <parameter key="giko_baidu_map.polygon.class">Ivory\GoogleMap\Overlays\Polygon</parameter>
        <parameter key="giko_baidu_map.polygon.builder.class">Giko\BaiduMapBundle\Model\Overlays\PolygonBuilder</parameter>
        <parameter key="giko_baidu_map.polygon.helper.class">Ivory\GoogleMap\Helper\Overlays\PolygonHelper</parameter>

        <parameter key="giko_baidu_map.polyline.class">Ivory\GoogleMap\Overlays\Polyline</parameter>
        <parameter key="giko_baidu_map.polyline.builder.class">Giko\BaiduMapBundle\Model\Overlays\PolylineBuilder</parameter>
        <parameter key="giko_baidu_map.polyline.helper.class">Ivory\GoogleMap\Helper\Overlays\PolylineHelper</parameter>

        <parameter key="giko_baidu_map.rectangle.class">Ivory\GoogleMap\Overlays\Rectangle</parameter>
        <parameter key="giko_baidu_map.rectangle.builder.class">Giko\BaiduMapBundle\Model\Overlays\RectangleBuilder</parameter>
        <parameter key="giko_baidu_map.rectangle.helper.class">Ivory\GoogleMap\Helper\Overlays\RectangleHelper</parameter>
    </parameters>

    <services>
        <!-- Animation service -->
        <service
            id="giko_baidu_map.helper.animation"
            class="%giko_baidu_map.animation.helper.class%"
            public="false"
        />

        <!-- Circle service -->
        <service
            id="giko_baidu_map.circle"
            class="%giko_baidu_map.circle.class%"
            factory-service="giko_baidu_map.circle.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.circle.builder" class="%giko_baidu_map.circle.builder.class%">
            <argument>%giko_baidu_map.circle.class%</argument>
            <argument type="service" id="giko_baidu_map.coordinate.builder" />
        </service>

        <service id="giko_baidu_map.helper.circle" class="%giko_baidu_map.circle.helper.class%" public="false" />

        <!-- Encoded polyline service -->
        <service
            id="giko_baidu_map.encoded_polyline"
            class="%giko_baidu_map.encoded_polyline.class%"
            factory-service="giko_baidu_map.encoded_polyline.builder"
            factory-method="build"
            scope="prototype"
        />

        <service
            id="giko_baidu_map.encoded_polyline.builder"
            class="%giko_baidu_map.encoded_polyline.builder.class%"
        >
            <argument>%giko_baidu_map.encoded_polyline.class%</argument>
        </service>

        <service
            id="giko_baidu_map.helper.encoded_polyline"
            class="%giko_baidu_map.encoded_polyline.helper.class%"
            public="false"
        >
            <argument type="service" id="giko_baidu_map.helper.encoding" />
        </service>

        <service
            id="giko_baidu_map.helper.encoding"
            class="%giko_baidu_map.encoding.helper.class%"
            public="false"
        />

        <!-- Ground overlay service -->
        <service
            id="giko_baidu_map.ground_overlay"
            class="%giko_baidu_map.ground_overlay.class%"
            factory-service="giko_baidu_map.ground_overlay.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.ground_overlay.builder" class="%giko_baidu_map.ground_overlay.builder.class%">
            <argument>%giko_baidu_map.ground_overlay.class%</argument>
            <argument type="service" id="giko_baidu_map.bound.builder" />
        </service>

        <service
            id="giko_baidu_map.helper.ground_overlay"
            class="%giko_baidu_map.ground_overlay.helper.class%"
            public="false"
        />

        <!-- Info window service -->
        <service
            id="giko_baidu_map.info_window"
            class="%giko_baidu_map.info_window.class%"
            factory-service="giko_baidu_map.info_window.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.info_window.builder" class="%giko_baidu_map.info_window.builder.class%">
            <argument>%giko_baidu_map.info_window.class%</argument>
            <argument type="service" id="giko_baidu_map.coordinate.builder" />
            <argument type="service" id="giko_baidu_map.size.builder" />
        </service>

        <service
            id="giko_baidu_map.helper.info_window"
            class="%giko_baidu_map.info_window.helper.class%"
            public="false"
        />

        <!-- Marker cluster service -->
        <service
            id="giko_baidu_map.marker_cluster"
            class="%giko_baidu_map.marker_cluster.class%"
            factory-service="giko_baidu_map.marker_cluster.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.marker_cluster.builder" class="%giko_baidu_map.marker_cluster.builder.class%">
            <argument>%giko_baidu_map.marker_cluster.class%</argument>
        </service>

        <service
            id="giko_baidu_map.helper.marker_cluster"
            class="%giko_baidu_map.marker_cluster.helper.class%"
            public="false"
        >
            <argument type="collection">
                <argument key="default" type="service" id="giko_baidu_map.marker_cluster.helper.default" />
                <argument key="marker_cluster" type="service" id="giko_baidu_map.marker_cluster.helper.js" />
            </argument>
        </service>

        <service
            id="giko_baidu_map.marker_cluster.helper.abstract"
            class="%giko_baidu_map.marker_cluster.helper.abstract.class%"
            abstract="true"
        >
            <argument type="service" id="giko_baidu_map.helper.marker" />
        </service>

        <service
            id="giko_baidu_map.marker_cluster.helper.default"
            class="%giko_baidu_map.marker_cluster.helper.default.class%"
            parent="giko_baidu_map.marker_cluster.helper.abstract"
            public="false"
        >
            <argument type="service" id="giko_baidu_map.helper.info_window" />
        </service>

        <service
            id="giko_baidu_map.marker_cluster.helper.js"
            class="%giko_baidu_map.marker_cluster.helper.js.class%"
            parent="giko_baidu_map.marker_cluster.helper.default"
            public="false"
        />

        <!-- Marker service -->
        <service
            id="giko_baidu_map.marker"
            class="%giko_baidu_map.marker.class%"
            factory-service="giko_baidu_map.marker.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.marker.builder" class="%giko_baidu_map.marker.builder.class%">
            <argument>%giko_baidu_map.marker.class%</argument>
            <argument type="service" id="giko_baidu_map.coordinate.builder" />
        </service>

        <service id="giko_baidu_map.helper.marker" class="%giko_baidu_map.marker.helper.class%" public="false">
            <argument type="service" id="giko_baidu_map.helper.animation" />
        </service>

        <!-- Marker image service -->
        <service
            id="giko_baidu_map.marker_image"
            class="%giko_baidu_map.marker_image.class%"
            factory-service="giko_baidu_map.marker_image.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.marker_image.builder" class="%giko_baidu_map.marker_image.builder.class%">
            <argument>%giko_baidu_map.marker_image.class%</argument>
            <argument type="service" id="giko_baidu_map.point.builder" />
            <argument type="service" id="giko_baidu_map.size.builder" />
        </service>

        <service
            id="giko_baidu_map.helper.marker_image"
            class="%giko_baidu_map.marker_image.helper.class%"
            public="false"
        />

        <!-- Marker shape service -->
        <service
            id="giko_baidu_map.marker_shape"
            class="%giko_baidu_map.marker_shape.class%"
            factory-service="giko_baidu_map.marker_shape.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.marker_shape.builder" class="%giko_baidu_map.marker_shape.builder.class%">
            <argument>%giko_baidu_map.marker_shape.class%</argument>
        </service>

        <service
            id="giko_baidu_map.helper.marker_shape"
            class="%giko_baidu_map.marker_shape.helper.class%"
            public="false"
        />

        <!-- Polygon service -->
        <service
            id="giko_baidu_map.polygon"
            class="%giko_baidu_map.polygon.class%"
            factory-service="giko_baidu_map.polygon.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.polygon.builder" class="%giko_baidu_map.polygon.builder.class%">
            <argument>%giko_baidu_map.polygon.class%</argument>
        </service>

        <service id="giko_baidu_map.helper.polygon" class="%giko_baidu_map.polygon.helper.class%" public="false" />

        <!-- Polyline service -->
        <service
            id="giko_baidu_map.polyline"
            class="%giko_baidu_map.polyline.class%"
            factory-service="giko_baidu_map.polyline.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.polyline.builder" class="%giko_baidu_map.polyline.builder.class%">
            <argument>%giko_baidu_map.polyline.class%</argument>
        </service>

        <service
            id="giko_baidu_map.helper.polyline"
            class="%giko_baidu_map.polyline.helper.class%"
            public="false"
        />

        <!-- Rectangle service -->
        <service
            id="giko_baidu_map.rectangle"
            class="%giko_baidu_map.rectangle.class%"
            factory-service="giko_baidu_map.rectangle.builder"
            factory-method="build"
            scope="prototype"
        />

        <service id="giko_baidu_map.rectangle.builder" class="%giko_baidu_map.rectangle.builder.class%">
            <argument>%giko_baidu_map.rectangle.class%</argument>
            <argument type="service" id="giko_baidu_map.bound.builder" />
        </service>

        <service
            id="giko_baidu_map.helper.rectangle"
            class="%giko_baidu_map.rectangle.helper.class%"
            public="false"
        />
    </services>
</container>
